version: "3.3"
services:
  api-ecosonar:
    image: itmagix/ecosonar-api:1.0
    container_name: ecosonar_api
    ports:
      - "3000:3000"
    networks:
      - sonarnet
    restart: unless-stopped

  sonar:
    image: itmagix/ecosonar-sonarqube:3.2
    container_name: ecosonar_sonarqube
    ports:
      - "9000:9000"
    networks:
      - sonarnet
    depends_on:
      - db
      - api-ecosonar
    environment:
      SONAR_JDBC_USERNAME: ${POSTGRES_USER}
      SONAR_JDBC_PASSWORD: ${POSTGRES_PASSWORD}
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: 'true'
    volumes:
      - logs:/opt/sonarqube/logs
      - data:/opt/sonarqube/data
      - conf:/opt/sonarqube/conf
      - extensions:/opt/sonarqube/extensions
    restart: unless-stopped

  db:
    image: postgres:alpine
    container_name: ecosonar_postgresql
    networks:
      - sonarnet
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: pg_data:/var/lib/postgresql/data/pgdata
    restart: unless-stopped

networks:
  sonarnet:
    driver: bridge

volumes:
  logs:
  data:
  conf:
  extensions:
  pg_data:
